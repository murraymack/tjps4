{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Murray2\\\\tjp-s4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Amplify, { API, Storage } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\nimport { listTodos } from './graphql/queries';\nimport { createTodo as createNoteMutation, deleteTodo as deleteNoteMutation } from './graphql/mutations';\nconst initialFormState = {\n  name: '',\n  description: ''\n};\nAmplify.configure({\n  Auth: {\n    identityPoolId: 'us-east-1:bcd6f475-ebf7-41a1-a519-92171f126f09',\n    //REQUIRED - Amazon Cognito Identity Pool ID\n    region: 'us-east-1',\n    // REQUIRED - Amazon Cognito Region\n    userPoolId: 'us-east-1_rxQUTw4b3',\n    //OPTIONAL - Amazon Cognito User Pool ID\n    userPoolWebClientId: '5mlmnlk7nbvtra1bt3ugki9vb3' //OPTIONAL - Amazon Cognito Web Client ID\n\n  },\n  Storage: {\n    AWSS3: {\n      bucket: 'amplify-tjps4-dev-90841-deployment90841-dev',\n      //REQUIRED -  Amazon S3 bucket name\n      region: 'us-east-1' //OPTIONAL -  Amazon service region\n\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({\n      query: listTodos\n    });\n    const notesFromAPI = apiData.data.listTodos.items;\n    await Promise.all(notesFromAPI.map(async note => {\n      if (note.image) {\n        const image = await Storage.get(note.image);\n        note.image = image;\n      }\n    }));\n    setNotes(apiData.data.listTodos.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({\n      query: createNoteMutation,\n      variables: {\n        input: formData\n      }\n    });\n\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n\n    setNotes([...notes, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({\n    id\n  }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({\n      query: deleteNoteMutation,\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  }\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return;\n    const file = e.target.files[0];\n    setFormData({ ...formData,\n      image: file.name\n    });\n    await Storage.put(file.name, file);\n    fetchNotes();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Eyes on your own screen, Evangelian\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setFormData({ ...formData,\n        'name': e.target.value\n      }),\n      placeholder: \"Note name\",\n      value: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setFormData({ ...formData,\n        'description': e.target.value\n      }),\n      placeholder: \"Note description\",\n      value: formData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createNote,\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 30\n      },\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note),\n          children: \"Delete Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), note.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: note.image,\n          style: {\n            width: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this)]\n      }, note.id || note.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AmplifySignOut, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Triple J Pipelines - Cost Report App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JPBvvkw3reuBWHQ6nysTAgsogYI=\");\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Murray2/tjp-s4/src/App.js"],"names":["React","useState","useEffect","Amplify","API","Storage","awsconfig","AmplifySignOut","withAuthenticator","listTodos","createTodo","createNoteMutation","deleteTodo","deleteNoteMutation","initialFormState","name","description","configure","Auth","identityPoolId","region","userPoolId","userPoolWebClientId","AWSS3","bucket","App","notes","setNotes","formData","setFormData","fetchNotes","apiData","graphql","query","notesFromAPI","data","items","Promise","all","map","note","image","get","createNote","variables","input","deleteNote","id","newNotesArray","filter","onChange","e","target","files","file","put","value","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Amplify, { API, Storage } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport {AmplifySignOut, withAuthenticator} from '@aws-amplify/ui-react';\nimport { listTodos } from './graphql/queries';\nimport { createTodo as createNoteMutation, deleteTodo as deleteNoteMutation } from './graphql/mutations';\n\nconst initialFormState = { name: '', description: ''}\n\nAmplify.configure({\n    Auth: {\n\t    identityPoolId: 'us-east-1:bcd6f475-ebf7-41a1-a519-92171f126f09', //REQUIRED - Amazon Cognito Identity Pool ID\n\t    region: 'us-east-1', // REQUIRED - Amazon Cognito Region\n\t    userPoolId: 'us-east-1_rxQUTw4b3', //OPTIONAL - Amazon Cognito User Pool ID\n\t    userPoolWebClientId: '5mlmnlk7nbvtra1bt3ugki9vb3', //OPTIONAL - Amazon Cognito Web Client ID\n    },\n    Storage: {\n        AWSS3: {\n            bucket: 'amplify-tjps4-dev-90841-deployment90841-dev', //REQUIRED -  Amazon S3 bucket name\n            region: 'us-east-1', //OPTIONAL -  Amazon service region\n        }\n    }\n});\n\nfunction App() {\n\tconst [notes, setNotes] = useState([]);\n\tconst [formData, setFormData] = useState(initialFormState);\n\n\tuseEffect(() => {\n\t\tfetchNotes();\n\t\t}, []);\n\n\tasync function fetchNotes() {\n\t\tconst apiData = await API.graphql({ query : listTodos });\n\t\tconst notesFromAPI = apiData.data.listTodos.items;\n\t\tawait Promise.all(notesFromAPI.map(async note=> {\n\t\t\tif (note.image) {\n\t\t\t\tconst image = await Storage.get(note.image);\n\t\t\t\tnote.image = image;\n\t\t\t}\n\t\t}))\n\t\tsetNotes(apiData.data.listTodos.items);\n\t}\n\n\tasync function createNote() {\n\t\tif (!formData.name || !formData.description) return;\n\t\tawait API.graphql({ query: createNoteMutation, variables: { input : formData } });\n\t\tif (formData.image) {\n\t\t\tconst image = await Storage.get(formData.image);\n\t\t\tformData.image = image;\n\t\t}\n\t\tsetNotes([ ...notes, formData ]);\n\t\tsetFormData(initialFormState);\n\t}\n\n\tasync function deleteNote({ id }) {\n\t\tconst newNotesArray = notes.filter(note => note.id !== id);\n\t\tsetNotes(newNotesArray);\n\t\tawait API.graphql({ query: deleteNoteMutation, variables: { input: { id } }});\n\t}\n\n\tasync function onChange(e) {\n\t\tif (!e.target.files[0]) return;\n\t\tconst file = e.target.files[0];\n\t\tsetFormData({ ...formData, image: file.name});\n\t\tawait Storage.put(file.name, file);\n\t\tfetchNotes();\n\t}\n\n  return (\n    <div className=\"App\">\n    \t<h1>Eyes on your own screen, Evangelian</h1>\n    \t<input\n    \t\tonChange={e => setFormData({ ...formData, 'name': e.target.value})}\n    \t\tplaceholder=\"Note name\"\n    \t\tvalue={formData.name}\n    \t/>\n    \t<input\n    \t\tonChange={e => setFormData({ ...formData, 'description': e.target.value})}\n    \t\tplaceholder=\"Note description\"\n    \t\tvalue={formData.description}\n    \t/>\n    \t<button onClick={createNote}>Create Note</button>\n    \t<input\n    \t\ttype=\"file\"\n    \t\tonChange={onChange}\n    \t/>\n    \t<div style={{marginBottom: 30}}>\n    \t{ \n    \t\tnotes.map(note=> (\n    \t\t\t<div key={note.id || note.name}>\n    \t\t\t\t<h2>{note.name}</h2>\n    \t\t\t\t<p>{note.description}</p>\n    \t\t\t\t<button onClick={() => deleteNote(note)}>Delete Note</button>\n    \t\t\t\t{\n    \t\t\t\t\tnote.image && <img src={note.image} style={{width: 400}} />\n    \t\t\t\t}\n    \t\t\t</div> \n    \t\t))\n    \t}\n    \t</div>\n\t\t<AmplifySignOut />\n\t\t<h2>Triple J Pipelines - Cost Report App</h2>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}