{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Murray2\\\\tjp-s4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Amplify, { API, Storage } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\nimport { listTodos } from './graphql/queries';\nimport { createTodo as createNoteMutation, deleteTodo as deleteNoteMutation } from './graphql/mutations';\nconst initialFormState = {\n  name: '',\n  description: ''\n};\nAmplify.configure(awsconfig);\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [formData, setFormData] = useState(initialFormState);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({\n      query: listTodos\n    });\n    const notesFromAPI = apiData.data.listTodos.items;\n    await Promise.all(notesFromAPI.map(async note => {\n      if (note.image) {\n        const image = await Storage.get(note.image);\n        note.image = image;\n      }\n    }));\n    setNotes(apiData.data.listTodos.items);\n  }\n\n  async function createNote() {\n    if (!formData.name || !formData.description) return;\n    await API.graphql({\n      query: createNoteMutation,\n      variables: {\n        input: formData\n      }\n    });\n\n    if (formData.image) {\n      const image = await Storage.get(formData.image);\n      formData.image = image;\n    }\n\n    setNotes([...notes, formData]);\n    setFormData(initialFormState);\n  }\n\n  async function deleteNote({\n    id\n  }) {\n    const newNotesArray = notes.filter(note => note.id !== id);\n    setNotes(newNotesArray);\n    await API.graphql({\n      query: deleteNoteMutation,\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  }\n\n  async function onChange(e) {\n    if (!e.target.files[0]) return;\n    const file = e.target.files[0];\n    setFormData({ ...formData,\n      image: file.name\n    });\n    await Storage.put(file.name, file);\n    fetchNotes();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Triple J Project Controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transaction Process Audit Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setFormData({ ...formData,\n          'name': e.target.value\n        }),\n        placeholder: \"Project, e.g. 20017\",\n        value: formData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setFormData({ ...formData,\n            'description': e.target.value\n          }),\n          placeholder: \"Description\",\n          value: formData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNote,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        display: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [note.name, \" - \", note.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note),\n          children: \"Delete Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, note.id || note.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 30\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AmplifySignOut, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Triple J Pipelines - Created by Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JPBvvkw3reuBWHQ6nysTAgsogYI=\");\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Murray2/tjp-s4/src/App.js"],"names":["React","useState","useEffect","Amplify","API","Storage","awsconfig","AmplifySignOut","withAuthenticator","listTodos","createTodo","createNoteMutation","deleteTodo","deleteNoteMutation","initialFormState","name","description","configure","App","notes","setNotes","formData","setFormData","fetchNotes","apiData","graphql","query","notesFromAPI","data","items","Promise","all","map","note","image","get","createNote","variables","input","deleteNote","id","newNotesArray","filter","onChange","e","target","files","file","put","value","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Amplify, { API, Storage } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport {AmplifySignOut, withAuthenticator} from '@aws-amplify/ui-react';\nimport { listTodos } from './graphql/queries';\nimport { createTodo as createNoteMutation, deleteTodo as deleteNoteMutation } from './graphql/mutations';\n\nconst initialFormState = { name: '', description: ''}\n\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n\tconst [notes, setNotes] = useState([]);\n\tconst [formData, setFormData] = useState(initialFormState);\n\n\tuseEffect(() => {\n\t\tfetchNotes();\n\t\t}, []);\n\n\tasync function fetchNotes() {\n\t\tconst apiData = await API.graphql({ query : listTodos });\n\t\tconst notesFromAPI = apiData.data.listTodos.items;\n\t\tawait Promise.all(notesFromAPI.map(async note=> {\n\t\t\tif (note.image) {\n\t\t\t\tconst image = await Storage.get(note.image);\n\t\t\t\tnote.image = image;\n\t\t\t}\n\t\t}))\n\t\tsetNotes(apiData.data.listTodos.items);\n\t}\n\n\tasync function createNote() {\n\t\tif (!formData.name || !formData.description) return;\n\t\tawait API.graphql({ query: createNoteMutation, variables: { input : formData } });\n\t\tif (formData.image) {\n\t\t\tconst image = await Storage.get(formData.image);\n\t\t\tformData.image = image;\n\t\t}\n\t\tsetNotes([ ...notes, formData ]);\n\t\tsetFormData(initialFormState);\n\t}\n\n\tasync function deleteNote({ id }) {\n\t\tconst newNotesArray = notes.filter(note => note.id !== id);\n\t\tsetNotes(newNotesArray);\n\t\tawait API.graphql({ query: deleteNoteMutation, variables: { input: { id } }});\n\t}\n\n\tasync function onChange(e) {\n\t\tif (!e.target.files[0]) return;\n\t\tconst file = e.target.files[0];\n\t\tsetFormData({ ...formData, image: file.name});\n\t\tawait Storage.put(file.name, file);\n\t\tfetchNotes();\n\t}\n\n  return (\n    <div className=\"App\">\n    \t<h2>Triple J Project Controls</h2>\n    \t<h3>Transaction Process Audit Upload</h3>\n    \t<div>\n    \t<input\n    \t\tonChange={e => setFormData({ ...formData, 'name': e.target.value})}\n    \t\tplaceholder=\"Project, e.g. 20017\"\n    \t\tvalue={formData.name}\n    \t/>\n    \t<p>\n    \t<input\n    \t\tonChange={e => setFormData({ ...formData, 'description': e.target.value})}\n    \t\tplaceholder=\"Description\"\n    \t\tvalue={formData.description}\n    \t/>\n    \t</p>\n    \t</div>\n    \t<div>\n\t    \t<p>\n\t    \t<input\n\t    \t\ttype=\"file\"\n\t    \t\tonChange={onChange}\n\t    \t/>\n\t    \t<button onClick={createNote}>Upload</button>\n\t    \t</p>\n    \t</div>\n    \t<div>\n    \t</div>\n    \t{ \n    \t\tnotes.map(note=> (\n    \t\t\t<div key={note.id || note.name}>\n    \t\t\t\t<div display=\"inline\">\n    \t\t\t\t\t<p>{note.name} - {note.description}</p><button onClick={() => deleteNote(note)}>Delete Entry</button> \n    \t\t\t\t</div>\n    \t\t\t</div>\t\n    \t\t\t\n    \t\t))\n    \t}\n    \t<div style={{marginBottom: 30}}>\n    \t</div>\n\t\t<AmplifySignOut />\n\t\t<h3>Triple J Pipelines - Created by Me</h3>\n    </div>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}